plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	//	UPDATE PROTOCOL
	//	paste gradle.properties Fabric Properties and Dependencies and manually update Mod Properties
	//	loom version set above (from https://github.com/FabricMC/fabric-example-mod)
	//	update fabric.mod.json depends minecraft version
	//	paste cottonmc version below
	//	delete .gradle .vscode bin build run
	//	paste new example mod files (rarely needed)
	//	update fabric.mod.json (rarely needed)
	//	java project clean workspace
	//	./gradlew genSources	.\gradlew vscode
	//	./gradlew --refresh-dependencies
	//	./gradlew build
	//	UPDATE LAUNCHER
	//	download new fabric API mod (from https://www.curseforge.com/minecraft/mc-mods/fabric-api)
	//	use fabric installer to get new launcher profile
	//	copy 42jar from build/libs to mods

	//	ERRORS
	//	file being used by another process -> ./gradlew --stop


	//	https://github.com/CottonMC/LibGui/releases
	modImplementation include("io.github.cottonmc:LibGui:6.5.1+1.19.3")
	//include api("io.github.juuxel:libninepatch:1.1.0")

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}