plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation include("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
	
	//	UPDATE PROTOCOL
	//	paste gradle.properties Fabric Properties and Dependencies and manually update Mod Properties
	//	update fabric.mod.json depends minecraft version (for new full mc versions)
	//	close vscode, end all openjdk tasks, run gradle commands in powershell:
	//		./gradlew genSources --refresh-dependencies
	//		.\gradlew vscode
	//	.vscode/launch.json "args": "--quickPlaySingleplayer \"Continue Testing\""
	//	./gradlew build
	//	java project clean workspace
	
	//	UPDATE LAUNCHER
	//	use fabric installer to get new launcher profile
	//	copy 42jar from build/libs to mods

	//	RARE UPDATES
	//	./gradlew clean			./gradlew --stop
	//	delete .gradle .vscode bin build run
	//	delete .gradle .cache from User
	//	update example mod files
	//	update FortytwoEdit.FEATURES

	//	TOOLS
	//	Ctrl-P search MC classes starting with #
	//	Mixin help https://fabricmc.net/wiki/tutorial:mixin_introduction

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}